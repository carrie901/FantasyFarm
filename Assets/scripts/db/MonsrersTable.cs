//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Entity;
using System.Collections.Generic;


namespace Database
{
	public class MonstersTable
	{
		private SqliteDatabase sqlDB;
		public MonstersTable ()
		{
			sqlDB = new SqliteDatabase("farm.db");
		}

		/**
		 * Monster一覧情報を取得する
		 */
		public List<Entity.Monsters> selectAllMosters() {
			// Select
			string selectQuery = "select * from Monsters";
			DataTable dataTable = sqlDB.ExecuteQuery(selectQuery);
			var entities = new List<Entity.Monsters>();
			foreach(DataRow dr in dataTable.Rows){
				Entity.Monsters entity = new Entity.Monsters((int)dr["id"], (string)dr["name"], (string)dr["dispname"], (string)dr["description"], (int)dr["isMine"]);
				entities.Add(entity);
			}
			return entities;
		}

		/**
		 * ニックネーム(表示名)からモンスターの識別名を取得する
		 */
		public Entity.Monsters selectMosterInfo (string name)
		{
			// SqliteKitで日本語を扱うとBYTE数で落ちるので、kitのソースをかきかえている。
			// http://bribser.co.jp/blog/sqliteunitykit/
			string selectQuery = "select * from Monsters where name = \"" + name + "\"";
			DataTable dataTable = sqlDB.ExecuteQuery(selectQuery);
			Entity.Monsters entity = null;
			foreach(DataRow dr in dataTable.Rows){
				entity = new Entity.Monsters((int)dr["id"], (string)dr["name"], (string)dr["dispname"], (string)dr["description"], (int)dr["isMine"]);
			}
			return entity;
		}

		/**
		 * Monsterテーブルに所有済みの値をセットする
		 */
		public void updateMyMonsterFlg(int type, int value)
		{
			string query = "update Monsters set isMine = '" + value + "'" + " where type = '" + type + "'";
			sqlDB.ExecuteNonQuery(query);
		}

		// typeに一致するモンスターを取得する
		public Entity.Monsters selectMosterByType(int type) {
			// Select
			string selectQuery = "select * from Monsters where type = " + "'" + type + "'";
			DataTable dataTable = sqlDB.ExecuteQuery(selectQuery);
			Entity.Monsters entity = null;
			foreach(DataRow dr in dataTable.Rows){
				entity = new Entity.Monsters((int)dr["id"], (string)dr["name"], (string)dr["dispname"], (string)dr["description"], (int)dr["isMine"]);
				break;
			}
			return entity;
		}
	}
}

